naming <- gsub("blue 2", "TH-C1", naming)
naming <- gsub("blue 3", "TH-D4", naming)
naming <- gsub("blue 4", "TH-F3", naming)
naming <- gsub("light-yellow 1", "Gr28bd+TrpA1", naming)
naming <- gsub("light-yellow 2", "NP5272", naming)
naming <- gsub("light-yellow 3", "MZ840", naming)
naming <- gsub("light-yellow 4", "TH-C'", naming)
naming <- gsub("dark-green 1", "mb315c", naming)
naming <- gsub("dark-green 2", "TH-D1", naming)
naming <- gsub("dark-green 3", "mb299b", naming)
naming <- gsub("red 1", "5htr1b", naming)
naming <- gsub("red 2", "TH-G80+TH-G4", naming)
naming <- gsub("red 3", "mb025b", naming)
naming <- gsub("red 4", "mb060b", naming)
naming <- gsub("light-green 1", "mb056b", naming)
naming <- gsub("light-green 2", "mb312b", naming)
naming <- gsub("light-green 3", "mb032b", naming)
naming <- gsub("light-green 4", "mb065b", naming)
naming <- gsub("dark-yellow 1", "NP47", naming)
naming <- gsub("dark-yellow 2", "NP1528", naming)
naming <- gsub("dark-yellow 3", "TH-C1+TH-F1", naming)
naming <- gsub("dark-yellow 4", "DDC(HL9)", naming)
naming <- gsub("pink 1", "MZ19", naming)
naming <- gsub("pink 2", "TH-F1", naming)
naming <- gsub("pink 3", "TH-F2", naming)
naming <- gsub("pink 4", "DDC(HL8)", naming)
naming <- gsub("white 1", "TH-G1", naming)
naming <- gsub("white 2", "NP6510", naming)
naming <- colnames(effectsize_mat)
naming <- gsub("orange 1", "TH", naming)
naming <- gsub("orange 2", "mb304b", naming)
naming <- gsub("orange 3", "mb109b", naming)
naming <- gsub("orange 4", "58E02", naming)
naming <- gsub("blue 1", "TH-D'", naming)
naming <- gsub("blue 2", "TH-C1", naming)
naming <- gsub("blue 3", "TH-D4", naming)
naming <- gsub("blue 4", "TH-F3", naming)
naming <- gsub("light-yellow 1", "Gr28bd+TrpA1", naming)
naming <- gsub("light-yellow 2", "NP5272", naming)
naming <- gsub("light-yellow 3", "MZ840", naming)
naming <- gsub("light-yellow 4", "TH-C'", naming)
naming <- gsub("dark-green 1", "mb315c", naming)
naming <- gsub("dark-green 2", "TH-D1", naming)
naming <- gsub("dark-green 3", "mb299b", naming)
naming <- gsub("red 1", "5htr1b", naming)
naming <- gsub("red 2", "TH-G80+TH-G4", naming)
naming <- gsub("red 3", "mb025b", naming)
naming <- gsub("red 4", "mb060b", naming)
naming <- gsub("light-green 1", "mb056b", naming)
naming <- gsub("light-green 2", "mb312b", naming)
naming <- gsub("light-green 3", "mb032b", naming)
naming <- gsub("light-green 4", "mb065b", naming)
naming <- gsub("dark-yellow 1", "NP47", naming)
naming <- gsub("dark-yellow 2", "NP1528", naming)
naming <- gsub("dark-yellow 3", "TH-C1+TH-F1", naming)
naming <- gsub("dark-yellow 4", "DDC(HL9)", naming)
naming <- gsub("pink 1", "MZ19", naming)
naming <- gsub("pink 2", "TH-F1", naming)
naming <- gsub("pink 3", "TH-F2", naming)
naming <- gsub("pink 4", "DDC(HL8)", naming)
naming <- gsub("white 1", "TH-G1", naming)
naming <- gsub("white 2", "NP6510", naming)
naming
naming <- gsub("light-green1", "mb056b", naming)
naming <- gsub("light-green2", "mb312b", naming)
naming <- gsub("light-green3", "mb032b", naming)
naming <- gsub("light-green4", "mb065b", naming)
naming
naming <- gsub("lightgreen1", "mb056b", naming)
naming <- gsub("lightgreen2", "mb312b", naming)
naming <- gsub("lightgreen3", "mb032b", naming)
naming <- gsub("lightgreen4", "mb065b", naming)
naming
naming <- colnames(effectsize_mat)
naming <- gsub("orange1", "TH", naming)
naming <- gsub("orange2", "mb304b", naming)
naming <- gsub("orange3", "mb109b", naming)
naming <- gsub("orange4", "58E02", naming)
naming <- gsub("blue1", "TH-D'", naming)
naming <- gsub("blue2", "TH-C1", naming)
naming <- gsub("blue3", "TH-D4", naming)
naming <- gsub("blue4", "TH-F3", naming)
naming <- gsub("lightyellow1", "Gr28bd+TrpA1", naming)
naming <- gsub("lightyellow2", "NP5272", naming)
naming <- gsub("lightyellow3", "MZ840", naming)
naming <- gsub("lightyellow4", "TH-C'", naming)
naming <- gsub("darkgreen1", "mb315c", naming)
naming <- gsub("darkgreen2", "TH-D1", naming)
naming <- gsub("darkgreen3", "mb299b", naming)
naming <- gsub("red1", "5htr1b", naming)
naming <- gsub("red2", "TH-G80+TH-G4", naming)
naming <- gsub("red3", "mb025b", naming)
naming <- gsub("red4", "mb060b", naming)
naming <- gsub("lightgreen1", "mb056b", naming)
naming <- gsub("lightgreen2", "mb312b", naming)
naming <- gsub("lightgreen3", "mb032b", naming)
naming <- gsub("lightgreen4", "mb065b", naming)
naming <- gsub("darkyellow1", "NP47", naming)
naming <- gsub("darkyellow2", "NP1528", naming)
naming <- gsub("darkyellow3", "TH-C1+TH-F1", naming)
naming <- gsub("darkyellow4", "DDC(HL9)", naming)
naming <- gsub("pink1", "MZ19", naming)
naming <- gsub("pink2", "TH-F1", naming)
naming <- gsub("pink3", "TH-F2", naming)
naming <- gsub("pink4", "DDC(HL8)", naming)
naming <- gsub("white1", "TH-G1", naming)
naming <- gsub("white2", "NP6510", naming)
naming
naming <- colnames(effectsize_mat)
naming <- gsub("orange1", "TH", naming)
naming <- gsub("orange2", "mb304b", naming)
naming <- gsub("orange3", "mb109b", naming)
naming <- gsub("orange4", "58E02", naming)
naming <- gsub("blue1", "TH-D'", naming)
naming <- gsub("blue2", "TH-C1", naming)
naming <- gsub("blue3", "TH-D4", naming)
naming <- gsub("blue4", "TH-F3", naming)
naming <- gsub("lightyellow1", "Gr28bd+TrpA1", naming)
naming <- gsub("lightyellow2", "NP5272", naming)
naming <- gsub("lightyellow3", "MZ840", naming)
naming <- gsub("lightyellow4", "TH-C'", naming)
naming <- gsub("darkgreen1", "mb315c", naming)
naming <- gsub("darkgreen2", "TH-D1", naming)
naming <- gsub("darkgreen3", "mb299b", naming)
naming <- gsub("red1", "5htr1b", naming)
naming <- gsub("red2", "TH-G80+TH-G4", naming)
naming <- gsub("red3", "mb025b", naming)
naming <- gsub("red4", "mb060b", naming)
naming <- gsub("lightgreen1", "mb056b", naming)
naming <- gsub("lightgreen2", "mb312b", naming)
naming <- gsub("lightgreen3", "mb032b", naming)
naming <- gsub("lightgreen4", "mb065b", naming)
naming <- gsub("darkyellow1", "NP47", naming)
naming <- gsub("darkyellow2", "NP1528", naming)
naming <- gsub("darkyellow3", "TH-C1+TH-F1", naming)
naming <- gsub("darkyellow4", "DDC(HL9)", naming)
naming <- gsub("darkpink1", "MZ19", naming)
naming <- gsub("darkpink2", "TH-F1", naming)
naming <- gsub("darkpink3", "TH-F2", naming)
naming <- gsub("darkpink4", "DDC(HL8)", naming)
naming <- gsub("white1", "TH-G1", naming)
naming <- gsub("white2", "NP6510", naming)
naming
colnames(effectsize_mat)<-naming
colnames(just_rein_mat)<-naming
#boxplot(effectsize_mat,col="yelow",xlab="",ylab="reinforcement", names = c("blue1","blue3","blue4","darkgreen1","darkgreen2","darkgreen3","darkpink1","darkpink3","darkpink4","darkyellow1","darkyellow2","darkyellow3","darkyellow4","lightgreen1","lightgreen2","lightgreen4","lightyellow2","orange1","orange3","orange4","red1","red2","red3","white1","white2","positivecontrol"), cex.lab=1.0, cex.axis = 0.5, las=2)
boxplot(effectsize_mat,col="yellow",xlab="",ylab="reinforcement - pretest", names = as.character(all_screens), cex.lab=1.0, cex.axis = 1, las=2)
#boxplot(effectsize_mat,col="yelow",xlab="",ylab="reinforcement", names = c("blue1","blue3","blue4","darkgreen1","darkgreen2","darkgreen3","darkpink1","darkpink3","darkpink4","darkyellow1","darkyellow2","darkyellow3","darkyellow4","lightgreen1","lightgreen2","lightgreen4","lightyellow2","orange1","orange3","orange4","red1","red2","red3","white1","white2","positivecontrol"), cex.lab=1.0, cex.axis = 0.5, las=2)
boxplot(effectsize_mat,col="yellow",xlab="",ylab="reinforcement - pretest", names = colnames(effectsize_mat), cex.lab=1.0, cex.axis = 1, las=2)
barCenters <- barplot(height = mean_effectsize,
beside = true, las = 2,ylim=c(-1,1),
cex.names = 1,
main = "mixed Reinforcement with yellow light",
ylab = "Reinforcement",
border = "black", axes = TRUE)
segments(barCenters, mean_effectsize - std_err_effectsize, barCenters,
mean_effectsize + std_err_effectsize, lwd = 1.5)
mean_effectsize <- apply(effectsize_mat,2,function(effectsize_mat){mean(effectsize_mat, na.rm = TRUE)})
std_dev_effectsize <- apply(effectsize_mat,2,function(effectsize_mat){sd(effectsize_mat, na.rm = TRUE)})
std_err_effectsize <- std_dev_effectsize/count**0.5
barCenters <- barplot(height = mean_effectsize,
beside = true, las = 2,ylim=c(-1,1),
cex.names = 1,
main = "mixed Reinforcement with yellow light",
ylab = "Reinforcement",
border = "black", axes = TRUE)
segments(barCenters, mean_effectsize - std_err_effectsize, barCenters,
mean_effectsize + std_err_effectsize, lwd = 1.5)
mean_effectsize <- apply(just_rein_mat,2,function(just_rein_mat){mean(just_rein_mat, na.rm = TRUE)})
std_dev_effectsize <- apply(just_rein_mat,2,function(just_rein_mat){sd(just_rein_mat, na.rm = TRUE)})
std_err_effectsize <- std_dev_effectsize/count**0.5
barCenters <- barplot(height = mean_effectsize,
beside = true, las = 2,ylim=c(-1,1),
cex.names = 1,
main = "mixed Reinforcement with yellow light",
ylab = "Reinforcement",
border = "black", axes = TRUE)
segments(barCenters, mean_effectsize - std_err_effectsize, barCenters,
mean_effectsize + std_err_effectsize, lwd = 1.5)
mean_effectsize_norm <- apply(effectsize_mat,2,function(effectsize_mat){mean(effectsize_mat, na.rm = TRUE)})
std_dev_effectsize_norm <- apply(effectsize_mat,2,function(effectsize_mat){sd(effectsize_mat, na.rm = TRUE)})
std_err_effectsize_norm <- std_dev_effectsize_norm/count**0.5
barCenters <- barplot(height = mean_effectsize_norm,
beside = true, las = 2,ylim=c(-1,1),
cex.names = 1,
main = "mixed Reinforcement with yellow light",
ylab = "Reinforcement",
border = "black", axes = TRUE)
segments(barCenters, mean_effectsize_norm - std_err_effectsize_norm, barCenters,
mean_effectsize_norm + std_err_effectsize_norm, lwd = 1.5)
memory_abs<-mean_effectsize
memory_norm<-mean_effectsize_norm
memory_abs
write.table(memory_abs, "memory_abs.txt", sep="\t", row.names = FALSE,col.names = TRUE)
write.table(memory_norm, "memory_norm.txt", sep="\t", row.names = FALSE,col.names = TRUE)
reinforcement_absolute_joystick <- read.delim("C:/Users/LocalAdmin/Desktop/data/Joystick_screen/all/reinforcement_absolute_joystick.txt", header=FALSE)
View(reinforcement_absolute_joystick)
reinforcement_absolute_joystick <- read.delim("C:/Users/LocalAdmin/Desktop/data/Joystick_screen/all/reinforcement_absolute_joystick.txt")
View(reinforcement_absolute_joystick)
reinforcement_joystick <- read.delim("C:/Users/LocalAdmin/Desktop/data/Joystick_screen/all/reinforcement_joystick.txt")
View(reinforcement_joystick)
naming <- colnames(reinforcement_absolute_joystick)
naming <- gsub("orange1", "TH", naming)
naming <- gsub("orange2", "mb304b", naming)
naming <- gsub("orange3", "mb109b", naming)
naming <- gsub("orange4", "58E02", naming)
naming <- gsub("blue1", "TH-D'", naming)
naming <- gsub("blue2", "TH-C1", naming)
naming <- gsub("blue3", "TH-D4", naming)
naming <- gsub("blue4", "TH-F3", naming)
naming <- gsub("lightyellow1", "Gr28bd+TrpA1", naming)
naming <- gsub("lightyellow2", "NP5272", naming)
naming <- gsub("lightyellow3", "MZ840", naming)
naming <- gsub("lightyellow4", "TH-C'", naming)
naming <- gsub("darkgreen1", "mb315c", naming)
naming <- gsub("darkgreen2", "TH-D1", naming)
naming <- gsub("darkgreen3", "mb299b", naming)
naming <- gsub("red1", "5htr1b", naming)
naming <- gsub("red2", "TH-G80+TH-G4", naming)
naming <- gsub("red3", "mb025b", naming)
naming <- gsub("red4", "mb060b", naming)
naming <- gsub("lightgreen1", "mb056b", naming)
naming <- gsub("lightgreen2", "mb312b", naming)
naming <- gsub("lightgreen3", "mb032b", naming)
naming <- gsub("lightgreen4", "mb065b", naming)
naming <- gsub("darkyellow1", "NP47", naming)
naming <- gsub("darkyellow2", "NP1528", naming)
naming <- gsub("darkyellow3", "TH-C1+TH-F1", naming)
naming <- gsub("darkyellow4", "DDC(HL9)", naming)
naming <- gsub("darkpink1", "MZ19", naming)
naming <- gsub("darkpink2", "TH-F1", naming)
naming <- gsub("darkpink3", "TH-F2", naming)
naming <- gsub("darkpink4", "DDC(HL8)", naming)
naming <- gsub("white1", "TH-G1", naming)
naming <- gsub("white2", "NP6510", naming)
colnames(reinforcement_absolute_joystick)<-naming
View(reinforcement_absolute_joystick)
naming <- colnames(reinforcement_joystick)
naming <- gsub("orange1", "TH", naming)
naming <- gsub("orange2", "mb304b", naming)
naming <- gsub("orange3", "mb109b", naming)
naming <- gsub("orange4", "58E02", naming)
naming <- gsub("blue1", "TH-D'", naming)
naming <- gsub("blue2", "TH-C1", naming)
naming <- gsub("blue3", "TH-D4", naming)
naming <- gsub("blue4", "TH-F3", naming)
naming <- gsub("lightyellow1", "Gr28bd+TrpA1", naming)
naming <- gsub("lightyellow2", "NP5272", naming)
naming <- gsub("lightyellow3", "MZ840", naming)
naming <- gsub("lightyellow4", "TH-C'", naming)
naming <- gsub("darkgreen1", "mb315c", naming)
naming <- gsub("darkgreen2", "TH-D1", naming)
naming <- gsub("darkgreen3", "mb299b", naming)
naming <- gsub("red1", "5htr1b", naming)
naming <- gsub("red2", "TH-G80+TH-G4", naming)
naming <- gsub("red3", "mb025b", naming)
naming <- gsub("red4", "mb060b", naming)
naming <- gsub("lightgreen1", "mb056b", naming)
naming <- gsub("lightgreen2", "mb312b", naming)
naming <- gsub("lightgreen3", "mb032b", naming)
naming <- gsub("lightgreen4", "mb065b", naming)
naming <- gsub("darkyellow1", "NP47", naming)
naming <- gsub("darkyellow2", "NP1528", naming)
naming <- gsub("darkyellow3", "TH-C1+TH-F1", naming)
naming <- gsub("darkyellow4", "DDC(HL9)", naming)
naming <- gsub("darkpink1", "MZ19", naming)
naming <- gsub("darkpink2", "TH-F1", naming)
naming <- gsub("darkpink3", "TH-F2", naming)
naming <- gsub("darkpink4", "DDC(HL8)", naming)
naming <- gsub("white1", "TH-G1", naming)
naming <- gsub("white2", "NP6510", naming)
colnames(reinforcement_joystick)<-naming
View(reinforcement_joystick)
abs_re<-colMeans(reinforcement_absolute_joystick,na.rm = TRUE)
norm_re<-colMeans(reinforcement_joystick,na.rm = TRUE)
a <- lm(abs_re ~ norm_re)
summary(a)
a <- lm(abs_re ~ memory_abs)
summary(a)
a <- lm(memory_norm ~ norm_re)
summary(a)
a <- lm(memory_norm ~ memory_abs)
summary(a)
a <- lm(abs_re ~ memory_norm)
summary(a)
a <- lm(memory_abs ~ norm_re)
summary(a)
mean_effectsize <- apply(just_rein_mat,2,function(just_rein_mat){mean(just_rein_mat, na.rm = TRUE)})
std_dev_effectsize <- apply(just_rein_mat,2,function(just_rein_mat){sd(just_rein_mat, na.rm = TRUE)})
std_err_effectsize <- std_dev_effectsize/count**0.5
barCenters <- barplot(height = mean_effectsize,
beside = true, las = 2,ylim=c(-1,1),
cex.names = 1,
main = "Joystick memory with yellow light",
ylab = "memory",
border = "black", axes = TRUE)
segments(barCenters, mean_effectsize - std_err_effectsize, barCenters,
mean_effectsize + std_err_effectsize, lwd = 1.5)
mean_effectsize_norm <- apply(effectsize_mat,2,function(effectsize_mat){mean(effectsize_mat, na.rm = TRUE)})
std_dev_effectsize_norm <- apply(effectsize_mat,2,function(effectsize_mat){sd(effectsize_mat, na.rm = TRUE)})
std_err_effectsize_norm <- std_dev_effectsize_norm/count**0.5
barCenters <- barplot(height = mean_effectsize_norm,
beside = true, las = 2,ylim=c(-1,1),
cex.names = 1,
main = "Joystick memory normalized with yellow light",
ylab = "Memory norm",
border = "black", axes = TRUE)
segments(barCenters, mean_effectsize_norm - std_err_effectsize_norm, barCenters,
mean_effectsize_norm + std_err_effectsize_norm, lwd = 1.5)
all_phenotypes <- read.delim("~/all_phenotypes.txt")
View(all_phenotypes)
ind<-matrix(NA,100,4)
ind[,1]<-
first<-sample(all_phenotypes[,1], 100, replace = TRUE)
View(all_phenotypes)
first<-sample(all_phenotypes[c(-39,-40,-41,-42),1], 100, replace = TRUE)
sec<-sample(all_phenotypes[c(-39,-40,-41,-42),2], 100, replace = TRUE)
third<-sample(all_phenotypes[c(-39,-40,-41,-42),3], 100, replace = TRUE)
fourth<-sample(all_phenotypes[c(-39,-40,-41,-42),4], 100, replace = TRUE)
c(first,sec,third,fourth)
cbind(first,sec,third,fourth)
sampled_phen<-cbind(first,sec,third,fourth)
View(sampled_phen)
sampled_phen<-cbind(first,sec,third,fourth)
discrete_phenotype<-matrix(NA,nrow(sampled_phen),2)
for (i in 1:nrow(sampled_phen)){
discrete_phenotype[i,]<-c(sum(sampled_phen[i,]>0,na.rm=TRUE),sum(sampled_phen[i,]<0,na.rm=TRUE))
}
row.names(discrete_phenotype)<-row.names(sampled_phen)
View(discrete_phenotype)
library(lattice)
#setEPS()
#postscript("Barchart_overall_phenotypes.eps")
barchart(sampled_phen,scales=list(x=list(rot=90,cex=0.8)))
hist(rowSums(sampled_phen,na.rm = FALSE),20)
first<-sample(all_phenotypes[c(-39,-40,-41,-42),1], 400, replace = TRUE)
sec<-sample(all_phenotypes[c(-39,-40,-41,-42),2], 400, replace = TRUE)
third<-sample(all_phenotypes[c(-39,-40,-41,-42),3], 400, replace = TRUE)
fourth<-sample(all_phenotypes[c(-39,-40,-41,-42),4], 400, replace = TRUE)
sampled_phen<-cbind(first,sec,third,fourth)
discrete_phenotype<-matrix(NA,nrow(sampled_phen),2)
for (i in 1:nrow(sampled_phen)){
discrete_phenotype[i,]<-c(sum(sampled_phen[i,]>0,na.rm=TRUE),sum(sampled_phen[i,]<0,na.rm=TRUE))
}
row.names(discrete_phenotype)<-row.names(sampled_phen)
library(lattice)
#setEPS()
#postscript("Barchart_overall_phenotypes.eps")
barchart(sampled_phen,scales=list(x=list(rot=90,cex=0.8)))
hist(rowSums(sampled_phen,na.rm = FALSE),20)
first<-sample(all_phenotypes[c(-39,-40,-41,-42),1], 1000, replace = TRUE)
sec<-sample(all_phenotypes[c(-39,-40,-41,-42),2], 1000, replace = TRUE)
third<-sample(all_phenotypes[c(-39,-40,-41,-42),3], 1000, replace = TRUE)
fourth<-sample(all_phenotypes[c(-39,-40,-41,-42),4], 1000, replace = TRUE)
sampled_phen<-cbind(first,sec,third,fourth)
discrete_phenotype<-matrix(NA,nrow(sampled_phen),2)
for (i in 1:nrow(sampled_phen)){
discrete_phenotype[i,]<-c(sum(sampled_phen[i,]>0,na.rm=TRUE),sum(sampled_phen[i,]<0,na.rm=TRUE))
}
row.names(discrete_phenotype)<-row.names(sampled_phen)
library(lattice)
#setEPS()
#postscript("Barchart_overall_phenotypes.eps")
barchart(sampled_phen,scales=list(x=list(rot=90,cex=0.8)))
hist(rowSums(sampled_phen,na.rm = FALSE),20)
first<-sample(all_phenotypes[c(-39,-40,-41,-42),1], 9000, replace = TRUE)
sec<-sample(all_phenotypes[c(-39,-40,-41,-42),2], 9000, replace = TRUE)
third<-sample(all_phenotypes[c(-39,-40,-41,-42),3], 9000, replace = TRUE)
fourth<-sample(all_phenotypes[c(-39,-40,-41,-42),4], 9000, replace = TRUE)
sampled_phen<-cbind(first,sec,third,fourth)
discrete_phenotype<-matrix(NA,nrow(sampled_phen),2)
for (i in 1:nrow(sampled_phen)){
discrete_phenotype[i,]<-c(sum(sampled_phen[i,]>0,na.rm=TRUE),sum(sampled_phen[i,]<0,na.rm=TRUE))
}
row.names(discrete_phenotype)<-row.names(sampled_phen)
library(lattice)
#setEPS()
#postscript("Barchart_overall_phenotypes.eps")
barchart(sampled_phen,scales=list(x=list(rot=90,cex=0.8)))
hist(rowSums(sampled_phen,na.rm = FALSE),20)
a<-hist(rowSums(sampled_phen,na.rm = FALSE),20)
a<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = NULL, probability = !freq)
a<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = TRUE, probability = !freq)
a<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = TRUE, probability = TRUE)
a<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = TRUE)
a<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = FALSE)
a<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = FALSE,density = TRUE)
h<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = FALSE,density = TRUE)
h<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = FALSE)
h$density <- h$density*100
plot(h, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 25),
col="gray")
densF <- density(coeff_value)
lines(densF$x, densF$y*100, lwd=2, col='green')
h<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = FALSE)
h$density <- h$density*100
plot(h, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 100),
col="gray")
h<-hist(rowSums(sampled_phen,na.rm = FALSE),20,freq = FALSE)
h$density <- h$density*100
plot(h, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 100),
col="gray")
plot(h, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
densF <- density(coeff_value)
lines(densF$x, densF$y*100, lwd=2, col='green')
densF <- density(sampled_phen)
densF <- density(sampled_phen,na.rm = TRUE)
lines(densF$x, densF$y*100, lwd=2, col='green')
plot(h$counts/9000, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
plot(h$counts/9000, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
barplot(h$counts/90, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
data<-rowSums(sampled_phen,na.rm = FALSE)
data<-rowSums(sampled_phen,na.rm = FALSE)
h<-hist(data,20,freq = FALSE)
barplot(h$counts/90, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
barplot(h$counts/90, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
lines(h$counts/90, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
lines(h$counts/90, xlab="rate",
ylab="Probability (%)", ylim=c(0, 50),
col="gray")
barplot(h$counts/90, xlab="rate",
ylab="Probability (%)", ylim=c(0, 50),
col="gray")
barplot(h$counts/90, xlab="rate",
ylab="Probability (%)", ylim=c(0, 10),
col="gray")
barplot(h$counts/90, xlab="rate",
ylab="Probability (%)", ylim=c(0, 40),
col="gray")
barplot(h$counts/90, xlab="rate",
ylab="Probability (%)", ylim=c(0, 4),
col="gray")
sum(h$counts)
barplot(h$counts/sum(h$counts), xlab="rate",
ylab="Probability (%)", ylim=c(0, 4),
col="gray")
barplot(h$counts/sum(h$counts), xlab="rate",
ylab="Probability (%)", ylim=c(0, 1),
col="gray")
barplot((h$counts*100)/sum(h$counts), xlab="rate",
ylab="Probability (%)", ylim=c(0, 1),
col="gray")
barplot((h$counts*100)/sum(h$counts), xlab="rate",
ylab="Probability (%)", ylim=c(0, 100),
col="gray")
barplot((h$counts*100)/sum(h$counts), xlab="rate",
ylab="Probability (%)", ylim=c(0, 20),
col="gray")
plot((h$counts*100)/sum(h$counts), type="l",xlab="rate",
ylab="Probability (%)", ylim=c(0, 20),
col="gray")
h<-hist(data,20,freq = FALSE)
h$counts<-(h$counts*100)/sum(h$counts)
plot(h$counts, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 200),
col="gray")
plot(h$counts, freq=F, xlab="rate",
ylab="Probability (%)", ylim=c(0, 100),
col="gray")
plot(h$counts, freq=F, xlab="rate", type = "l"
ylab="Probability (%)", ylim=c(0, 20),
col="gray")
plot(h$counts, freq=F, xlab="rate", type = "l",
ylab="Probability (%)", ylim=c(0, 20),
col="gray")
plot(h$counts,h$breaks, freq=F, xlab="rate", type = "l",
ylab="Probability (%)", ylim=c(0, 20),
col="gray")
plot(h$counts~h$breaks, freq=F, xlab="rate", type = "l",
ylab="Probability (%)", ylim=c(0, 20),
col="gray")
densF <- density(data,na.rm = TRUE)
lines(densF$x, densF$y*100, lwd=2, col='green')
h<-hist(data,20,freq = FALSE)
densF <- density(data,na.rm = TRUE)
lines(densF$x, densF$y*100, lwd=2, col='green')
h<-hist(data,20)
lines(densF$x, densF$y*100, lwd=2, col='green')
View(densF)
lines(h$counts, h$breaks, lwd=2, col='green')
lines(h$counts, h$breaks[1:18], lwd=2, col='green')
lines(h$counts, h$breaks[1:18], lwd=2, col='blue')
lines(h$counts, h$breaks[1:18], lwd=2, col='blue')
hist(data, probability = TRUE)
lines(density(data), col = "Red", lwd = 2)
lines(density(data,na.rm = TRUE), col = "Red", lwd = 2)
lines(density(data,na.rm = TRUE, adjust = 2), lwd = 2, col = "Blue")
hist(data, probability = TRUE)
lines(density(data,na.rm = TRUE, adjust = 2), lwd = 2, col = "Blue")
hist(data, 30,probability = TRUE)
lines(density(data,na.rm = TRUE, adjust = 2), lwd = 2, col = "Blue")
121,60+218+270,94+47,01+57,10+90+63,85+17,40
121.60+218+270.94+47.01+57.10+90+63.85+17.40
hist(data, 30,probability = FALSE)
lines(density(data,na.rm = TRUE, adjust = 2), lwd = 2, col = "Blue")
